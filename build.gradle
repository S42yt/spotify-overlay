plugins {
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
	id "org.jetbrains.kotlin.jvm" version "2.2.0"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
	mavenCentral()
	
	maven {
		name 'Xander Maven'
		url 'https://maven.isxander.dev/releases'
	}
	maven { url = uri("https://maven.wispforest.io") }
	maven { url = uri("https://maven.shedaniel.me/") }
	maven { url = uri("https://maven.terraformersmc.com/releases/") }
	maven { url = uri("https://reposilite.timlohrer.dev/snapshots") }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation "net.fabricmc:fabric-language-kotlin:${project.fabric_kotlin_version}"

	modImplementation("net.silkmc:silk-core:${project.silk_version}")
	
	// UI
	include(modImplementation("io.github.0x3c50.renderer:renderer-fabric:2.0.2"))
	modImplementation("io.wispforest:owo-lib:${project.owo_version}") {
		exclude group: "org.jetbrains.kotlin"
	}
	
	// CONFIG
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}
	modApi "com.terraformersmc:modmenu:${project.modmenu_version}"
	
	include(implementation("dev.timlohrer:local-media-listener:${project.local_media_listener_version}"))
}

loom {
	accessWidenerPath.set(file("src/main/resources/spotify_overlay.accesswidener"))
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 21
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
	kotlinOptions {
		jvmTarget = 21
	}
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
}

jar {
	inputs.property "archivesName", project.base.archivesName

	from("LICENSE") {
		rename { "${it}_${inputs.properties.archivesName}"}
	}
}

publishing {
	publications {
		create("mavenJava", MavenPublication) {
			artifactId = project.archives_base_name
			from components.java
		}
	}

	repositories {
		maven {
			name = "timlohrer-snapshots"
			url = uri("https://reposilite.timlohrer.dev/snapshots")
			credentials {
				username = System.getenv("REPOSILITE_USERNAME")
				password = System.getenv("REPOSILITE_PASSWORD")
			}
		}
	}
}